#include <iostream>
#include <iomanip>
#include <cmath>

using namespace std;

double s_calculation(int x, int y, int z) {
double s = pow(x, y) + sqrt(abs(z));
return s;
}

int main() {
char choice = ' ';

while (choice != 'y' && choice != 'Y' && choice != 'h') {
    cout << "Enter 'q' to calculate s, 'e' for task 8.1, 'r' for task 8.2, 't' for task 8.3: ";
    cin >> choice;

    switch (choice) {
        case 'q': {
            int x, y, z;
            cout << "Enter x, y, z: ";
            cin >> x >> y >> z;
            double s = s_calculation(x, y, z);
            cout << "Result: " << setprecision(5) << fixed << s << endl;
            break;
        }
        case 'e': {
            int n, negative_count = 0, zero_count = 0, range_count = 0;

            cout << "Enter the number of inputs: ";
            cin >> n;

            for (int i = 0; i < n; i++) {
                int num;
                cout << "Enter a number: ";
                cin >> num;

                if (cin.fail()) {
                    cout << "Invalid input. Exiting..." << endl;
                    break;
                }

                if (num < 0) {
                    negative_count++;
                } else if (num == 0) {
                    zero_count++;
                } else if (num >= 5 && num <= 1024) {
                    range_count++;
                }
            }

            cout << "Negative count: " << negative_count << endl;
            cout << "Zero count: " << zero_count << endl;
            cout << "Range count: " << range_count << endl;
            break;
        }
        case 'r': {
            unsigned int n;
            cout << "Enter a positive integer n: ";
            cin >> n;

            int count = 0;
            bool d1 = (n & 0x1); // Check bit D1
            if (d1) {
                // Count binary zeros
                while ((n & 0x1) == 0 && n != 0) {
                    count++;
                    n >>= 1;
                }
            } else {
                // Count binary ones
                while (n != 0) {
                    count += (n & 0x1);
                    n >>= 1;
                }
            }

            cout << "Result: " << count << endl;
            break;
        }
        case 't': {
            unsigned int n;
            cout << "Enter a positive integer n: ";
            cin >> n;

            int count = 0;
            bool d1 = (n & 0x1); // Check bit D1
            if (d1) {
                // Count binary zeros
                while ((n & 0x1) == 0 && n != 0) {
                    count++;
                    n >>= 1;
                }
            } else {
                // Count binary ones
                while (n != 0) {
                    count += (n & 0x1);
                    n >>= 1;
                }
            }

            cout << "Result: " << count << endl;
            break;
        }
        default: {
            cout << '\a'; // Beep sound
            break;
        }
    }
}

return 0
